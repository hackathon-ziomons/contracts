{
  "contractName": "GASContract",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getUsers",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "userCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "userExists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "userMapping",
      "outputs": [
        {
          "name": "userAddress",
          "type": "address"
        },
        {
          "name": "userMetadata",
          "type": "string"
        },
        {
          "name": "userBalance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_categoryId",
          "type": "uint256"
        }
      ],
      "name": "getVoteCategory",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUserActionCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_userAddress",
          "type": "address"
        },
        {
          "name": "_actionIndex",
          "type": "uint256"
        }
      ],
      "name": "getUserAction",
      "outputs": [
        {
          "name": "productId",
          "type": "uint256"
        },
        {
          "name": "actionCreator",
          "type": "address"
        },
        {
          "name": "actionMetadata",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getProductCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_userAddress",
          "type": "address"
        },
        {
          "name": "_userMetadata",
          "type": "string"
        }
      ],
      "name": "addUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "userAddressLUTPosition",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_productId",
          "type": "uint256"
        },
        {
          "name": "_actionId",
          "type": "uint256"
        },
        {
          "name": "_voteCategory",
          "type": "uint8"
        },
        {
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getActionVote",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUser",
      "outputs": [
        {
          "name": "userAddress",
          "type": "address"
        },
        {
          "name": "userMetadata",
          "type": "string"
        },
        {
          "name": "userBalance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_productId",
          "type": "uint256"
        },
        {
          "name": "_actionId",
          "type": "uint256"
        },
        {
          "name": "_voteCategory",
          "type": "uint8"
        },
        {
          "name": "_value",
          "type": "uint8"
        }
      ],
      "name": "addActionVote",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "removeUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_productId",
          "type": "uint256"
        },
        {
          "name": "_actionIndex",
          "type": "uint256"
        }
      ],
      "name": "getProductAction",
      "outputs": [
        {
          "name": "productId",
          "type": "uint256"
        },
        {
          "name": "actionCreator",
          "type": "address"
        },
        {
          "name": "actionMetadata",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_productId",
          "type": "uint256"
        }
      ],
      "name": "getProductActionCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_categoryName",
          "type": "string"
        }
      ],
      "name": "addVoteCategory",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "usersLUT",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_actionMetadata",
          "type": "string"
        }
      ],
      "name": "addProduct",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_productId",
          "type": "uint256"
        },
        {
          "name": "_actionMetadata",
          "type": "string"
        }
      ],
      "name": "addProductAction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVoteCategoriesCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_ownerMetadata",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_productId",
          "type": "uint256"
        }
      ],
      "name": "ProductAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061015e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062ce8e3e1461020f57806307973ccf1461027b5780630e666e49146102a6578063118b9535146103015780631663b086146103f757806323fbf46c1461049d57806326bdba1d146104f45780633ccfd60b146105f45780634a348da91461060b5780634b68d431146106365780634ce521e2146106bf5780634e7035e9146107165780636f77926b14610794578063715018a61461088a57806372fd15ce146108a15780638da5cb5b146108f25780638f32d59b1461094957806398575188146109785780639bf6468d146109bb578063c50b7bb014610aa5578063ce845d1d14610ae6578063d14d783914610b11578063dd1e3eab14610b7a578063dfe00c5114610be7578063f2fde38b14610c50578063f68bd35314610c93578063fee9260814610d06575b61016733610d31565b151561017257600080fd5b6101c734600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154610d8d90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550005b34801561021b57600080fd5b50610224610dae565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561026757808201518184015260208101905061024c565b505050509050019250505060405180910390f35b34801561028757600080fd5b50610290610e3c565b6040518082815260200191505060405180910390f35b3480156102b257600080fd5b506102e7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d31565b604051808215151515815260200191505060405180910390f35b34801561030d57600080fd5b50610342600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e49565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156103ba57808201518184015260208101905061039f565b50505050905090810190601f1680156103e75780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561040357600080fd5b5061042260048036038101908080359060200190929190505050610f2b565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610462578082015181840152602081019050610447565b50505050905090810190601f16801561048f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104a957600080fd5b506104de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ff9565b6040518082815260200191505060405180910390f35b34801561050057600080fd5b5061053f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611045565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156105b757808201518184015260208101905061059c565b50505050905090810190601f1680156105e45780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561060057600080fd5b50610609611279565b005b34801561061757600080fd5b506106206112ec565b6040518082815260200191505060405180910390f35b34801561064257600080fd5b506106bd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506112f9565b005b3480156106cb57600080fd5b50610700600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114d3565b6040518082815260200191505060405180910390f35b34801561072257600080fd5b506107786004803603810190808035906020019092919080359060200190929190803560ff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114eb565b604051808260ff1660ff16815260200191505060405180910390f35b3480156107a057600080fd5b506107d5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061158d565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561084d578082015181840152602081019050610832565b50505050905090810190601f16801561087a5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561089657600080fd5b5061089f611721565b005b3480156108ad57600080fd5b506108f06004803603810190808035906020019092919080359060200190929190803560ff169060200190929190803560ff1690602001909291905050506117f3565b005b3480156108fe57600080fd5b506109076118d3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561095557600080fd5b5061095e6118fc565b604051808215151515815260200191505060405180910390f35b34801561098457600080fd5b506109b9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611953565b005b3480156109c757600080fd5b506109f06004803603810190808035906020019092919080359060200190929190505050611cab565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610a68578082015181840152602081019050610a4d565b50505050905090810190601f168015610a955780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b348015610ab157600080fd5b50610ad060048036038101908080359060200190929190505050611e29565b6040518082815260200191505060405180910390f35b348015610af257600080fd5b50610afb611e68565b6040518082815260200191505060405180910390f35b348015610b1d57600080fd5b50610b78600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611e87565b005b348015610b8657600080fd5b50610ba560048036038101908080359060200190929190505050611edc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610bf357600080fd5b50610c4e600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611f1a565b005b348015610c5c57600080fd5b50610c91600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fd9565b005b348015610c9f57600080fd5b50610d0460048036038101908080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611ff8565b005b348015610d1257600080fd5b50610d1b61227a565b6040518082815260200191505060405180910390f35b600080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610d835760009050610d88565b600190505b919050565b6000808284019050838110151515610da457600080fd5b8091505092915050565b60606001805480602002602001604051908101604052809291908181526020018280548015610e3257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610de8575b5050505050905090565b6000600180549050905090565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f1b5780601f10610ef057610100808354040283529160200191610f1b565b820191906000526020600020905b815481529060010190602001808311610efe57829003601f168201915b5050505050908060020154905083565b606060048054905082101515610f4057600080fd5b600482815481101515610f4f57fe5b906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fed5780601f10610fc257610100808354040283529160200191610fed565b820191906000526020600020905b815481529060010190602001808311610fd057829003601f168201915b50505050509050919050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b6000806060600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508410151561109a57600080fd5b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848154811015156110e657fe5b9060005260206000209060050201600001549250600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110151561114657fe5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848154811015156111c657fe5b90600052602060002090600502016002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561126b5780601f106112405761010080835404028352916020019161126b565b820191906000526020600020905b81548152906001019060200180831161124e57829003601f168201915b505050505090509250925092565b6112816118fc565b151561128c57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156112e9573d6000803e3d6000fd5b50565b6000600680549050905090565b6113016118fc565b151561130c57600080fd5b60008273ffffffffffffffffffffffffffffffffffffffff1614158015611339575061133782610d31565b155b151561134457600080fd5b6060604051908101604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020016000815250600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190611419929190612381565b506040820151816002015590505060018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60026020528060005260406000206000915090505481565b60006006858154811015156114fc57fe5b9060005260206000209060030201600201600085815260200190815260200160002060040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008460ff1660ff16815260200190815260200160002060009054906101000a900460ff169050949350505050565b600060606000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116ce5780601f106116a3576101008083540402835291602001916116ce565b820191906000526020600020905b8154815290600101906020018083116116b157829003601f168201915b50505050509150600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015490509193909250565b6117296118fc565b151561173457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6117fc33610d31565b151561180757600080fd5b60058160ff1610801561182157506004805490508260ff16105b151561182c57600080fd5b8060068581548110151561183c57fe5b9060005260206000209060030201600201600085815260200190815260200160002060040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008460ff1660ff16815260200190815260200160002060006101000a81548160ff021916908360ff16021790555050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b61195b6118fc565b151561196657600080fd5b61196f81610d31565b80156119ae575061197e6118d3565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b15156119b957600080fd5b6001806119c4610e3c565b038154811015156119d157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600180600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403815481101515611a4c57fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460026000600180611ae3610e3c565b03815481101515611af057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001805480919060019003611bb39190612401565b50606060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001602060405190810160405280600081525081526020016000815250600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190611c9a929190612381565b506040820151816002015590505050565b6000806060611cb86112ec565b85101515611cc557600080fd5b600685815481101515611cd457fe5b90600052602060002090600302016002016000858152602001908152602001600020600001549250600685815481101515611d0b57fe5b9060005260206000209060030201600201600085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150600685815481101515611d6257fe5b906000526020600020906003020160020160008581526020019081526020016000206002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e1b5780601f10611df057610100808354040283529160200191611e1b565b820191906000526020600020905b815481529060010190602001808311611dfe57829003601f168201915b505050505090509250925092565b6000611e336112ec565b82101515611e4057600080fd5b600682815481101515611e4f57fe5b9060005260206000209060030201600101549050919050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b611e8f6118fc565b1515611e9a57600080fd5b6004819080600181540180825580915050906001820390600052602060002001600090919290919091509080519060200190611ed792919061242d565b505050565b600181815481101515611eeb57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611f2333610d31565b1515611f2e57600080fd5b6006604080519081016040528060068054905081526020016000815250908060018154018082558091505090600182039060005260206000209060030201600090919290919091506000820151816000015560208201518160010155505050611f9f60016006805490500382611ff8565b6001611fa96112ec565b037f4fc9d5acc453e78e01b205af5788a1c62f195c4b5cdc8eb8f1c670863b7e736a60405160405180910390a250565b611fe16118fc565b1515611fec57600080fd5b611ff581612287565b50565b600061200333610d31565b151561200e57600080fd5b6006805490508310151561202157600080fd5b60068381548110151561203057fe5b90600052602060002090600302016001015490506080604051908101604052808481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020014281525060068481548110151561208b57fe5b906000526020600020906003020160020160008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201908051906020019061211a929190612381565b506060820151816003015590505060068381548110151561213757fe5b906000526020600020906003020160010160008154809291906001019190505550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206080604051908101604052808581526020013373ffffffffffffffffffffffffffffffffffffffff16815260200184815260200142815250908060018154018082558091505090600182039060005260206000209060050201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190612267929190612381565b5060608201518160030155505050505050565b6000600480549050905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156122c357600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106123c257805160ff19168380011785556123f0565b828001600101855582156123f0579182015b828111156123ef5782518255916020019190600101906123d4565b5b5090506123fd91906124ad565b5090565b8154818355818111156124285781836000526020600020918201910161242791906124ad565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061246e57805160ff191683800117855561249c565b8280016001018555821561249c579182015b8281111561249b578251825591602001919060010190612480565b5b5090506124a991906124ad565b5090565b6124cf91905b808211156124cb5760008160009055506001016124b3565b5090565b905600a165627a7a72305820e86a5e44087d1597995ea83cb98953fff895939a07ccfb3d0ace72c5ea846fee0029",
  "sourceMap": "84:577:0:-;;;159:87;8:9:-1;5:2;;;30:1;27;20:12;5:2;159:87:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;547:10:1;538:6;;:19;;;;;;;;;;;;;;;;;;605:6;;;;;;;;;;;572:40;;601:1;572:40;;;;;;;;;;;;204:35:0;212:10;224:14;204:7;;;:35;;;:::i;:::-;159:87;84:577;;1199:357:4;885:9:1;:7;;;:9;;;:::i;:::-;877:18;;;;;;;;1344:3:4;1328:12;:19;;;;:60;;;;;1364:24;1375:12;1364:10;;;:24;;;:::i;:::-;1363:25;1328:60;1307:91;;;;;;;;1437:36;;;;;;;;;1442:12;1437:36;;;;;;1456:13;1437:36;;;;1471:1;1437:36;;;1409:11;:25;1421:12;1409:25;;;;;;;;;;;;;;;:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1522:8;1536:12;1522:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1522:27:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1483:22;:36;1506:12;1483:36;;;;;;;;;;;;;;;:66;;;;1199:357;;:::o;1001:89:1:-;1040:4;1077:6;;;;;;;;;;;1063:20;;:10;:20;;;1056:27;;1001:89;:::o;341:212:4:-;424:4;481:1;448:22;:29;471:5;448:29;;;;;;;;;;;;;;;;:34;444:102;;;503:5;496:12;;;;444:102;542:4;535:11;;341:212;;;;:::o;84:577:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "84:577:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2114:22:4;2125:10;2114;:22::i;:::-;2106:31;;;;;;;;363:50:0;403:9;363:11;:23;375:10;363:23;;;;;;;;;;;;;;;:35;;;:39;;:50;;;;:::i;:::-;325:11;:23;337:10;325:23;;;;;;;;;;;;;;;:35;;:88;;;;84:577;683:115:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;683:115:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;683:115:4;;;;;;;;;;;;;;;;;559:118;;8:9:-1;5:2;;;30:1;27;20:12;5:2;559:118:4;;;;;;;;;;;;;;;;;;;;;;;341:212;;8:9:-1;5:2;;;30:1;27;20:12;5:2;341:212:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;291:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;291:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;291:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:208:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;735:208:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;735:208:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2744:164;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2744:164:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2914:528;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2914:528:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2914:528:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;426:107:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;426:107:0;;;;;;1583:124:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1583:124:2;;;;;;;;;;;;;;;;;;;;;;;1199:357:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1199:357:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;231:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;231:54:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3796:269:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3796:269:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;804:389:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;804:389:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;804:389:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1368:137:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1368:137:1;;;;;;3448:342:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3448:342:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;682:76:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;682:76:1;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:89:1;;;;;;;;;;;;;;;;;;;;;;;;;;;1562:508:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1562:508:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;1939:539:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1939:539:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1939:539:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1713:220;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1713:220:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;539:120:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;539:120:0;;;;;;;;;;;;;;;;;;;;;;;594:135:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;594:135:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;200:25:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;200:25:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2484:254:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2484:254:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1676:107:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1676:107:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1092:485:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1092:485:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;949:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;949:137:2;;;;;;;;;;;;;;;;;;;;;;;341:212:4;424:4;481:1;448:22;:29;471:5;448:29;;;;;;;;;;;;;;;;:34;444:102;;;503:5;496:12;;;;444:102;542:4;535:11;;341:212;;;;:::o;1377:145:3:-;1435:7;1454:9;1470:1;1466;:5;1454:17;;1494:1;1489;:6;;1481:15;;;;;;;;1514:1;1507:8;;1377:145;;;;;:::o;683:115:4:-;751:9;783:8;776:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;683:115;:::o;559:118::-;628:4;655:8;:15;;;;648:22;;559:118;:::o;291:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;735:208:2:-;826:6;870:14;:21;;;;856:11;:35;848:44;;;;;;;;909:14;924:11;909:27;;;;;;;;;;;;;;;;;902:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:208;;;:::o;2744:164::-;2842:4;2869:11;:25;2881:12;2869:25;;;;;;;;;;;;;;;:32;;;;2862:39;;2744:164;;;:::o;2914:528::-;3039:14;3067:21;3102;3171:11;:25;3183:12;3171:25;;;;;;;;;;;;;;;:32;;;;3156:12;:47;3148:56;;;;;;;;3226:11;:25;3238:12;3226:25;;;;;;;;;;;;;;;3252:12;3226:39;;;;;;;;;;;;;;;;;;;;:49;;;3214:61;;3301:11;:25;3313:12;3301:25;;;;;;;;;;;;;;;3327:12;3301:39;;;;;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;3285:69;;3381:11;:25;3393:12;3381:25;;;;;;;;;;;;;;;3407:12;3381:39;;;;;;;;;;;;;;;;;;;;:54;;3364:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2914:528;;;;;:::o;426:107:0:-;885:9:1;:7;:9::i;:::-;877:18;;;;;;;;493:10:0;:19;;:33;513:4;:12;;;493:33;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;493:33:0;426:107::o;1583:124:2:-;1658:4;1685:8;:15;;;;1678:22;;1583:124;:::o;1199:357:4:-;885:9:1;:7;:9::i;:::-;877:18;;;;;;;;1344:3:4;1328:12;:19;;;;:60;;;;;1364:24;1375:12;1364:10;:24::i;:::-;1363:25;1328:60;1307:91;;;;;;;;1437:36;;;;;;;;;1442:12;1437:36;;;;;;1456:13;1437:36;;;;1471:1;1437:36;;;1409:11;:25;1421:12;1409:25;;;;;;;;;;;;;;;:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1522:8;1536:12;1522:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1522:27:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1483:22;:36;1506:12;1483:36;;;;;;;;;;;;;;;:66;;;;1199:357;;:::o;231:54::-;;;;;;;;;;;;;;;;;:::o;3796:269:2:-;3943:5;3971:8;3980:10;3971:20;;;;;;;;;;;;;;;;;;;;:35;;:46;4007:9;3971:46;;;;;;;;;;;:58;;:72;4030:12;3971:72;;;;;;;;;;;;;;;:87;4044:13;3971:87;;;;;;;;;;;;;;;;;;;;;;;;;3964:94;;3796:269;;;;;;:::o;804:389:4:-;904:19;937;970:16;1025:11;:25;1037:12;1025:25;;;;;;;;;;;;;;;:37;;;;;;;;;;;;1011:51;;1087:11;:25;1099:12;1087:25;;;;;;;;;;;;;;;:38;;1072:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1149:11;:25;1161:12;1149:25;;;;;;;;;;;;;;;:37;;;1135:51;;804:389;;;;;:::o;1368:137:1:-;885:9;:7;:9::i;:::-;877:18;;;;;;;;1466:1;1429:40;;1450:6;;;;;;;;;;;1429:40;;;;;;;;;;;;1496:1;1479:6;;:19;;;;;;;;;;;;;;;;;;1368:137::o;3448:342:2:-;2114:22:4;2125:10;2114;:22::i;:::-;2106:31;;;;;;;;3615:1:2;3606:6;:10;;;:63;;;;;3648:14;:21;;;;3632:13;:37;;;3606:63;3585:94;;;;;;;;3777:6;3689:8;3698:10;3689:20;;;;;;;;;;;;;;;;;;;;:35;;:46;3725:9;3689:46;;;;;;;;;;;:58;;:70;3748:10;3689:70;;;;;;;;;;;;;;;:85;3760:13;3689:85;;;;;;;;;;;;;;;;:94;;;;;;;;;;;;;;;;;;3448:342;;;;:::o;682:76:1:-;719:7;745:6;;;;;;;;;;;738:13;;682:76;:::o;1001:89::-;1040:4;1077:6;;;;;;;;;;;1063:20;;:10;:20;;;1056:27;;1001:89;:::o;1562:508:4:-;885:9:1;:7;:9::i;:::-;877:18;;;;;;;;1672:24:4;1683:12;1672:10;:24::i;:::-;:63;;;;;1728:7;:5;:7::i;:::-;1712:23;;:12;:23;;;;1672:63;1651:94;;;;;;;;1809:8;1832:1;1818:11;:9;:11::i;:::-;:15;1809:25;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:8;1804:1;1765:22;:36;1788:12;1765:36;;;;;;;;;;;;;;;;:40;1756:50;;;;;;;;;;;;;;;;;;:78;;;;;;;;;;;;;;;;;;1896:22;:36;1919:12;1896:36;;;;;;;;;;;;;;;;1844:22;:49;1867:8;1890:1;1876:11;:9;:11::i;:::-;:15;1867:25;;;;;;;;;;;;;;;;;;;;;;;;;;;1844:49;;;;;;;;;;;;;;;:88;;;;1981:1;1942:22;:36;1965:12;1942:36;;;;;;;;;;;;;;;:40;;;;1992:8;:17;;;;;;;;;;;;:::i;:::-;;2047:16;;;;;;;;;2052:3;2047:16;;;;;;;;;;;;;;;;;;;;;;;2061:1;2047:16;;;2019:11;:25;2031:12;2019:25;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1562:508;:::o;1939:539:2:-;2062:14;2090:21;2125;2192:17;:15;:17::i;:::-;2179:10;:30;2171:39;;;;;;;;2232:8;2241:10;2232:20;;;;;;;;;;;;;;;;;;;;:35;;:49;2268:12;2232:49;;;;;;;;;;;:59;;;2220:71;;2317:8;2326:10;2317:20;;;;;;;;;;;;;;;;;;;;:35;;:49;2353:12;2317:49;;;;;;;;;;;:63;;;;;;;;;;;;2301:79;;2407:8;2416:10;2407:20;;;;;;;;;;;;;;;;;;;;:35;;:49;2443:12;2407:49;;;;;;;;;;;:64;;2390:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1939:539;;;;;:::o;1713:220::-;1809:4;1850:17;:15;:17::i;:::-;1837:10;:30;1829:39;;;;;;;;1885:8;1894:10;1885:20;;;;;;;;;;;;;;;;;;;;:41;;;1878:48;;1713:220;;;:::o;539:120:0:-;613:4;640;:12;;;633:19;;539:120;:::o;594:135:2:-;885:9:1;:7;:9::i;:::-;877:18;;;;;;;;688:14:2;708:13;688:34;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;688:34:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;594:135;:::o;200:25:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2484:254:2:-;2114:22:4;2125:10;2114;:22::i;:::-;2106:31;;;;;;;;2574:8:2;2588:27;;;;;;;;;2596:8;:15;;;;2588:27;;;;2613:1;2588:27;;;2574:42;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2574:42:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2626:54;2661:1;2643:8;:15;;;;:19;2664:15;2626:16;:54::i;:::-;2729:1;2709:17;:15;:17::i;:::-;:21;2696:35;;;;;;;;;;2484:254;:::o;1676:107:1:-;885:9;:7;:9::i;:::-;877:18;;;;;;;;1748:28;1767:8;1748:18;:28::i;:::-;1676:107;:::o;1092:485:2:-;1252:16;2114:22:4;2125:10;2114;:22::i;:::-;2106:31;;;;;;;;1226:8:2;:15;;;;1213:10;:28;1205:37;;;;;;;;1271:8;1280:10;1271:20;;;;;;;;;;;;;;;;;;;;:41;;;1252:60;;1373:52;;;;;;;;;1380:10;1373:52;;;;1392:10;1373:52;;;;;;1404:15;1373:52;;;;1421:3;1373:52;;;1322:8;1331:10;1322:20;;;;;;;;;;;;;;;;;;;;:35;;:48;1358:11;1322:48;;;;;;;;;;;:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1435:8;1444:10;1435:20;;;;;;;;;;;;;;;;;;;;:41;;;:43;;;;;;;;;;;;;1488:11;:23;1500:10;1488:23;;;;;;;;;;;;;;;1517:52;;;;;;;;;1524:10;1517:52;;;;1536:10;1517:52;;;;;;1548:15;1517:52;;;;1565:3;1517:52;;;1488:82;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1488:82:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1092:485;;;:::o;949:137::-;1031:4;1058:14;:21;;;;1051:28;;949:137;:::o;1927:183:1:-;2020:1;2000:22;;:8;:22;;;;1992:31;;;;;;;;2067:8;2038:38;;2059:6;;;;;;;;;;;2038:38;;;;;;;;;;;;2095:8;2086:6;;:17;;;;;;;;;;;;;;;;;;1927:183;:::o;84:577:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./ProductManager.sol\";\nimport \"./SafeMath.sol\";\n\n\ncontract GASContract is ProductManager {\n    using SafeMath for uint;\n\n    constructor(string _ownerMetadata) {\n        addUser(msg.sender, _ownerMetadata);\n    }\n\n    function()\n        public\n        payable\n        onlyUser\n    {\n        userMapping[msg.sender].userBalance = userMapping[msg.sender].userBalance.add(msg.value);\n    }\n\n    function withdraw()\n        public\n        onlyOwner\n    {\n        msg.sender.transfer(this.balance);\n    }\n\n    function currentBalance()\n        public\n        constant\n        returns(uint)\n    {\n        return this.balance;\n    }\n}\n",
  "sourcePath": "/Users/matteo/repo/hackathon/eth/contracts/GASContract.sol",
  "ast": {
    "absolutePath": "/Users/matteo/repo/hackathon/eth/contracts/GASContract.sol",
    "exportedSymbols": {
      "GASContract": [
        67
      ]
    },
    "id": 68,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/matteo/repo/hackathon/eth/contracts/ProductManager.sol",
        "file": "./ProductManager.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 68,
        "sourceUnit": 565,
        "src": "26:30:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matteo/repo/hackathon/eth/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 68,
        "sourceUnit": 693,
        "src": "57:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ProductManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 564,
              "src": "108:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ProductManager_$564",
                "typeString": "contract ProductManager"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "108:14:0"
          }
        ],
        "contractDependencies": [
          176,
          564,
          904
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 67,
        "linearizedBaseContracts": [
          67,
          564,
          904,
          176
        ],
        "name": "GASContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8,
            "libraryName": {
              "contractScope": null,
              "id": 6,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 692,
              "src": "135:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$692",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "129:24:0",
            "typeName": {
              "id": 7,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "148:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 19,
              "nodeType": "Block",
              "src": "194:52:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 14,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 919,
                          "src": "212:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "212:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 16,
                        "name": "_ownerMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "224:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 13,
                      "name": "addUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 824,
                      "src": "204:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "204:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18,
                  "nodeType": "ExpressionStatement",
                  "src": "204:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 20,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "name": "_ownerMetadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "171:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "171:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "170:23:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "194:0:0"
            },
            "scope": 67,
            "src": "159:87:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "315:105:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 25,
                          "name": "userMapping",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 715,
                          "src": "325:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$704_storage_$",
                            "typeString": "mapping(address => struct UserManager.User storage ref)"
                          }
                        },
                        "id": 28,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 26,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 919,
                            "src": "337:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 27,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "337:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "325:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$704_storage",
                          "typeString": "struct UserManager.User storage ref"
                        }
                      },
                      "id": 29,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "userBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 703,
                      "src": "325:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 36,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 919,
                            "src": "403:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "403:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 30,
                              "name": "userMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 715,
                              "src": "363:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$704_storage_$",
                                "typeString": "mapping(address => struct UserManager.User storage ref)"
                              }
                            },
                            "id": 33,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 31,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 919,
                                "src": "375:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "375:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "363:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$704_storage",
                              "typeString": "struct UserManager.User storage ref"
                            }
                          },
                          "id": 34,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "userBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 703,
                          "src": "363:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 671,
                        "src": "363:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 38,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "363:50:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "325:88:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "325:88:0"
                }
              ]
            },
            "documentation": null,
            "id": 42,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 23,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 22,
                  "name": "onlyUser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 903,
                  "src": "302:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "302:8:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "260:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "315:0:0"
            },
            "scope": 67,
            "src": "252:168:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "483:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 52,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 940,
                          "src": "513:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GASContract_$67",
                            "typeString": "contract GASContract"
                          }
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "513:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 47,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 919,
                          "src": "493:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "493:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "493:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "493:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "493:33:0"
                }
              ]
            },
            "documentation": null,
            "id": 57,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 45,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 44,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 110,
                  "src": "469:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "469:9:0"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "443:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "483:0:0"
            },
            "scope": 67,
            "src": "426:107:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "623:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 62,
                      "name": "this",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 940,
                      "src": "640:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GASContract_$67",
                        "typeString": "contract GASContract"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "640:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 61,
                  "id": 64,
                  "nodeType": "Return",
                  "src": "633:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 66,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "currentBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "562:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "613:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "612:6:0"
            },
            "scope": 67,
            "src": "539:120:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 68,
        "src": "84:577:0"
      }
    ],
    "src": "0:662:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/matteo/repo/hackathon/eth/contracts/GASContract.sol",
    "exportedSymbols": {
      "GASContract": [
        67
      ]
    },
    "id": 68,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/matteo/repo/hackathon/eth/contracts/ProductManager.sol",
        "file": "./ProductManager.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 68,
        "sourceUnit": 565,
        "src": "26:30:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matteo/repo/hackathon/eth/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 68,
        "sourceUnit": 693,
        "src": "57:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ProductManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 564,
              "src": "108:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ProductManager_$564",
                "typeString": "contract ProductManager"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "108:14:0"
          }
        ],
        "contractDependencies": [
          176,
          564,
          904
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 67,
        "linearizedBaseContracts": [
          67,
          564,
          904,
          176
        ],
        "name": "GASContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8,
            "libraryName": {
              "contractScope": null,
              "id": 6,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 692,
              "src": "135:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$692",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "129:24:0",
            "typeName": {
              "id": 7,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "148:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 19,
              "nodeType": "Block",
              "src": "194:52:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 14,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 919,
                          "src": "212:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "212:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 16,
                        "name": "_ownerMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "224:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 13,
                      "name": "addUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 824,
                      "src": "204:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "204:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18,
                  "nodeType": "ExpressionStatement",
                  "src": "204:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 20,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "name": "_ownerMetadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "171:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "171:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "170:23:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "194:0:0"
            },
            "scope": 67,
            "src": "159:87:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "315:105:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 25,
                          "name": "userMapping",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 715,
                          "src": "325:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$704_storage_$",
                            "typeString": "mapping(address => struct UserManager.User storage ref)"
                          }
                        },
                        "id": 28,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 26,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 919,
                            "src": "337:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 27,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "337:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "325:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$704_storage",
                          "typeString": "struct UserManager.User storage ref"
                        }
                      },
                      "id": 29,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "userBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 703,
                      "src": "325:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 36,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 919,
                            "src": "403:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "403:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 30,
                              "name": "userMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 715,
                              "src": "363:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$704_storage_$",
                                "typeString": "mapping(address => struct UserManager.User storage ref)"
                              }
                            },
                            "id": 33,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 31,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 919,
                                "src": "375:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "375:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "363:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$704_storage",
                              "typeString": "struct UserManager.User storage ref"
                            }
                          },
                          "id": 34,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "userBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 703,
                          "src": "363:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 671,
                        "src": "363:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 38,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "363:50:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "325:88:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "325:88:0"
                }
              ]
            },
            "documentation": null,
            "id": 42,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 23,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 22,
                  "name": "onlyUser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 903,
                  "src": "302:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "302:8:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "260:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "315:0:0"
            },
            "scope": 67,
            "src": "252:168:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "483:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 52,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 940,
                          "src": "513:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GASContract_$67",
                            "typeString": "contract GASContract"
                          }
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "513:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 47,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 919,
                          "src": "493:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "493:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "493:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "493:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "493:33:0"
                }
              ]
            },
            "documentation": null,
            "id": 57,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 45,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 44,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 110,
                  "src": "469:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "469:9:0"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "443:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "483:0:0"
            },
            "scope": 67,
            "src": "426:107:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "623:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 62,
                      "name": "this",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 940,
                      "src": "640:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GASContract_$67",
                        "typeString": "contract GASContract"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "640:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 61,
                  "id": 64,
                  "nodeType": "Return",
                  "src": "633:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 66,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "currentBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "562:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "613:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "612:6:0"
            },
            "scope": 67,
            "src": "539:120:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 68,
        "src": "84:577:0"
      }
    ],
    "src": "0:662:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4447": {
      "events": {},
      "links": {},
      "address": "0x4e72770760c011647d4873f60a3cf6cdea896cd8",
      "transactionHash": "0xda8d3aba83bd305eba557ac47ff86c0711938eab38d5da67bed57774945eecbc"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-20T22:30:56.957Z"
}